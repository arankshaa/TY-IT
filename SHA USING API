import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

public class SHAHashing {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Prompt user for input
        System.out.println("Enter the string to hash:");
        String input = scanner.nextLine();

        // Validate input
        if (input.trim().isEmpty()) {
            System.out.println("Input cannot be empty.");
            return;
        }

        // Compute SHA-256 hash
        try {
            String sha256Hash = calculateSHA256(input);
            System.out.println("SHA-256 Hash: " + sha256Hash);
        } catch (NoSuchAlgorithmException e) {
            System.out.println("SHA-256 algorithm not available.");
        }
    }

    public static String calculateSHA256(String input) throws NoSuchAlgorithmException {
        // Create MessageDigest instance for SHA-256
        MessageDigest md = MessageDigest.getInstance("SHA-256");

        // Add input bytes to digest
        md.update(input.getBytes());

        // Get the hash's bytes
        byte[] bytes = md.digest();

        // Convert bytes to hexadecimal format
        StringBuilder sb = new StringBuilder();
        for (byte b : bytes) {
            sb.append(String.format("%02x", b));
        }
        return sb.toString();
    }
}
